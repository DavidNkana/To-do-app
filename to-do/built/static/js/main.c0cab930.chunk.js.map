{"version":3,"sources":["components/Header.js","components/form.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","input","setInput","todos","setTodos","editTodo","setEditTodo","useEffect","title","onSubmit","event","preventDefault","id","completed","newTodo","map","todo","updateTodo","uuidv4","type","placeholder","value","required","onChange","target","TodoList","onClick","findTodo","find","handleEdit","filter","handleDelete","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAUeA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,+C,eCsCGC,EAxCF,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YASxDC,qBAAU,WAEFL,EADDG,EACUA,EAASG,MAET,MAEd,CAACN,EAAUG,IAed,OACI,uBAAMI,SAXW,SAACC,GAClBA,EAAMC,iBACFN,EApBW,SAACG,EAAOI,EAAIC,GAC3B,IAAMC,EAAUX,EAAMY,KAAI,SAACC,GAAD,OACtBA,EAAKJ,KAAOA,EAAK,CAAEJ,QAAOI,KAAIC,aAAcG,KAEhDZ,EAASU,GACTR,EAAY,IAmBRW,CAAWhB,EAAOI,EAASO,GAAIP,EAASQ,YAHxCT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACS,GAAIM,cAAUV,MAAOP,EAAOY,WAAW,MAC5DX,EAAS,MAOb,UACI,uBAAOiB,KAAK,OAAOC,YAAY,qBAAqBrB,UAAU,aAAasB,MAAOpB,EAAOqB,UAAQ,EAACC,SAhBpF,SAACb,GACnBR,EAASQ,EAAMc,OAAOH,UAgBlB,wBAAQtB,UAAU,aAAaoB,KAAK,SAApC,SACKd,EAAW,KAAO,YCapBoB,G,KAhDE,SAAC,GAAqC,IAApCtB,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUE,EAAkB,EAAlBA,YAuBhC,OAGI,8BACKH,EAAMY,KAAI,SAACC,GAAD,OACP,qBAAIjB,UAAU,YAAd,UACI,uBAAOoB,KAAK,OAAOE,MAAOL,EAAKR,MAAOT,UAAU,OAAOwB,SAAU,SAACb,GAAD,OAAWA,EAAMC,oBAClF,gCAII,wBAAQZ,UAAU,0BAA0B2B,QAAS,kBApBtD,SAAC,GAAU,IAATd,EAAQ,EAARA,GACXe,EAAWxB,EAAMyB,MAAK,SAACZ,GAAD,OAAUA,EAAKJ,KAAOA,KAClDN,EAAYqB,GAkB+DE,CAAWb,IAAtE,kBAGA,wBAAQjB,UAAU,gBAAgB2B,QAAS,kBAlB1C,SAAC,GAAU,IAATd,EAAQ,EAARA,GACnBR,EAASD,EAAM2B,QAAO,SAACd,GAAD,OAAUA,EAAKJ,KAAOA,MAiBqBmB,CAAaf,IAA9D,sBATuBA,EAAKJ,WCOrCoB,G,MA9BH,WAGV,MAA0BC,mBAAS,IAAnC,mBAAOhC,EAAP,KAAcC,EAAd,KACA,EAA0B+B,mBAAS,IAAnC,mBAAO9B,EAAP,KAAcC,EAAd,KACA,EAAgC6B,mBAAS,MAAzC,mBAAO5B,EAAP,KAAiBC,EAAjB,KACA,OACE,qBAAKP,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACE,8BACE,cAAC,EAAD,MAEF,8BACE,cAAC,EAAD,CACAE,MAAOA,EACPC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,MAGf,8BACE,cAAC,EAAD,CAAUH,MAAOA,EAAOC,SAAUA,EAAUE,YAAaA,aClBpD4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0cab930.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>Todos List</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst Form = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\r\n\r\n    const updateTodo = (title, id, completed) => {\r\n        const newTodo = todos.map((todo) => \r\n            todo.id === id ? { title, id, completed } : todo\r\n        )\r\n        setTodos(newTodo);\r\n        setEditTodo(\"\");\r\n    }\r\n    useEffect(() => {\r\n        if(editTodo) {\r\n            setInput(editTodo.title)\r\n        } else {\r\n            setInput(\"\")\r\n        }\r\n    }, [setInput, editTodo]);\r\n    const onInputChange = (event) => {\r\n        setInput(event.target.value);\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(!editTodo) {\r\n            setTodos([...todos, {id: uuidv4(), title: input, completed: false}]);\r\n            setInput(\"\");\r\n        } else {\r\n            updateTodo(input, editTodo.id, editTodo.completed)\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <form onSubmit={onFormSubmit}>\r\n            <input type=\"text\" placeholder=\"Add a Todo here...\" className=\"task-input\" value={input} required onChange={onInputChange}/>\r\n            <button className=\"button-add\" type=\"submit\">\r\n                {editTodo ? \"OK\" : \"Add\"}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst TodoList = ({todos, setTodos, setEditTodo }) => {\r\n\r\n    const handleComplete = (todo) => {\r\n        \r\n        setTodos(\r\n            todos.map((item) => {\r\n                if(item.id === todo.id) {\r\n                    return {...item, completed: !item.completed}\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleEdit = ({id}) => {\r\n        const findTodo = todos.find((todo) => todo.id === id);\r\n        setEditTodo(findTodo);\r\n    }\r\n\r\n    const handleDelete = ({id}) => {\r\n        setTodos(todos.filter((todo) => todo.id !== id));\r\n    };\r\n    \r\n    return(\r\n\r\n       \r\n        <div>\r\n            {todos.map((todo) => (\r\n                <li className=\"list-item\" key={todo.id}>\r\n                    <input type=\"text\" value={todo.title} className=\"list\" onChange={(event) => event.preventDefault()}/>\r\n                    <div>\r\n                        {/* <button className=\"button-complete task-button\" onClick={() => handleComplete(todo)}>\r\n                            done\r\n                        </button> */}\r\n                        <button className=\"button-edit task-button\" onClick={() => handleEdit(todo)}>\r\n                            edit\r\n                        </button>\r\n                        <button className=\"button-delete\" onClick={() => handleDelete(todo)}>\r\n                            del\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n                \r\n    ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList; ","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Form from './components/form';\nimport TodoList from './components/todoList';\nimport './App.css';\n\n\nconst App = () => {\n\n \n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(null)\n  return (\n    <div className=\"container\">\n      <div className=\"app-wrapper\">\n        <div>\n          <Header />\n        </div>\n        <div>\n          <Form \n          input={input}\n          setInput={setInput}\n          todos={todos}\n          setTodos={setTodos}\n          editTodo={editTodo}\n          setEditTodo={setEditTodo}\n          />\n        </div>\n        <div>\n          <TodoList todos={todos} setTodos={setTodos} setEditTodo={setEditTodo}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}